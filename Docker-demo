Commands:
-----------
docker -v                      (to know the docker version)
docker version                 (to know the docker detailed version like server engine)
docker pull ubuntu              (to download image from docker hub to local)
docker images                    (to check all the images in local machine)
docker search <image name>       (to find images in docker hub)
docker ps                        (to see running containers)
docker ps -a                      (to see all containers)
docker run -it test-container containerID                    (to run and login in the container)
docker run -it --name test-container containerID           (to give name of container and run the container)
docker run -dt --name test-conatiner conatinerID            (to run container without login)
docker exec -it containerID /bin/bash                       (to login running container)
cntrl pq                      (To exit from the running container without stopping)
docker system df -v
docker system df 
docker rmi imageID              (to delete image)
docker rm containerID            (to delete container)
docker stop containerID            (to stop container)
docker start containerID              (to start container)
docker attach containerID
docker container ls -s              (to check the size of the container)


Docker Volumes:
-----------------
docker run --name jenkins -p 8181:8080 -p 50000:50000 -v /var/lib/jenkins:/var/jenkins_home jenkins/jenkins:lts-jdk11
docker run --name jenkins -p 8080:8080 -p 50000:50000 -v test-volume:/var/jenkins_home jenkins/jenkins:lts-jdk11
docker run -dt  -—name jenkins1 -p 7070:8080 -p 40000:40000 -v test-volume:/var/jenkins_home jenkins/jenkins:lts-jdk11
docker run --name testvolume -p 9191:8080 -p 60000:60000 -v test-volume:/var/jenkins_home jenkins/jenkins:lts-jdk11
docker run --name testvolume -p 9191:8080 -p 60000:60000 -v /var/lib/jenkins:/var/jenkins_home jenkins/jenkins:lts-jdk11
docker run --name testvolume -p 7070:8080 -p 40000:40000 -v /var/jenkins_test_path:/var/jenkins_home jenkins/jenkins:lts-jdk11
docker run --name rajesh -p 8080:8080 -p 50000:50000 -v rajesh:/var/jenkins_home jenkins/jenkins:lts-jdk11


Docker Volume Commands:
-----------------------
docker -v
docker volume --help
docker volume create test-volume
docker volume ls
docker volume inspect test-volume
docker volume purne

docker run --name jenkins -p 8080:8080 -p 50000:50000 -v test-volume:/var/jenkins_home jenkins

docker run --name jenkins -p 9191:8080 -p 60000:60000 -v test-volume:/var/jenkins_home jenkins



Docker Networking commands:
--------------------------------

docker run -it --name=alpine1 alpine
docker run -itd --name=alpine2 alpine
docker network inspect bridge
docker network create --driver=bridge chinni
docker run -itd --name=alpine1 --network=chinni alpine

docker container inspect --help
docker container inspect -f '{{.NetworkSettings.IPAddress}}' containerid
ipconfig eth0
docker container run -p 8080:80 -d nginx


docker swarm init
To create overlay network ----> multi-host connecting network basiclly it uses for docker swarm



       bridge-->Host mapping
  8080      80          a
 
docker run --name jenkins -p 9091:8080 -p 50000:50000 -v test-volume:/var/jenkins_home jenkins
docker run -it --network host jenkins/jenkins:lts-jdk11
docker run -it --network none centos /bin/bash
